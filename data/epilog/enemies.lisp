;;;; -*- mode: Common-Lisp; sly-buffer-package: "yadfa-enemies"; coding: utf-8-unix; -*-
(in-package :yadfa-enemies)
(defmethod update-instance-for-different-class ((previous yadfa-enemies:raptor) (current yadfa-allies:raptor) &rest initargs &key &allow-other-keys)
  (declare (ignore initargs))
  (call-next-method)
  (setf (skin-of current) :scales)
  (setf (tail-of current) '(:medium :scales))
  (setf (wings-of current) '())
  (setf (learned-moves-of current) '())
  (iter (for i in '(yadfa-moves:watersport yadfa-moves:mudsport))
        (pushnew (make-instance i) (moves-of current) :key 'type-of))
  (when (bitcoins-per-level-of previous)
    (setf (bitcoins-of current) (* (bitcoins-per-level-of previous) (level-of previous)))))
(defmethod update-instance-for-different-class ((previous yadfa-enemies:catchable-raccoon-bandit) (current yadfa-allies:diapered-raccoon-bandit) &rest initargs &key &allow-other-keys)
  (declare (ignore initargs))
  (call-next-method)
  (setf (skin-of current) :fur)
  (setf (tail-of current) '(:medium :fur))
  (setf (wings-of current) '())
  (setf (learned-moves-of current) '())
  (iter (for i in '(yadfa-moves:watersport yadfa-moves:mudsport))
        (pushnew (make-instance i) (moves-of current) :key 'type-of))
  (when (bitcoins-per-level-of previous)
    (setf (bitcoins-of current) (* (bitcoins-per-level-of previous) (level-of previous)))))
(defmethod update-instance-for-different-class ((previous yadfa-enemies:diapered-kobold) (current yadfa-allies:diapered-kobold) &rest initargs &key &allow-other-keys)
  (declare (ignore initargs))
  (call-next-method)
  (setf (skin-of current) :scales)
  (setf (tail-of current) '(:medium :scales))
  (setf (wings-of current) '())
  (setf (learned-moves-of current) '())
  (iter (for i in '(yadfa-moves:watersport yadfa-moves:mudsport))
        (pushnew (make-instance i) (moves-of current) :key 'type-of))
  (when (bitcoins-per-level-of previous)
    (setf (bitcoins-of current) (* (bitcoins-per-level-of previous) (level-of previous)))))
