image: Visual Studio 2017
platform: x64
clone_depth: 1
environment:
  CACHE: 'c:\cache\'
  SBCL_HOME: 'C:\Program Files\Steel Bank Common Lisp\1.4.14\'
  bintrayapikey:
    secure: O42a6FepgN/X3CzWpPbJkuKRhmENlIwBfbtMVQLKSWR/annp514THuh4Dynu6xLZ

install:
# Like Windows Installer, Chocolatey's build files are apparently incapable of building the sources
- ps: If(!(test-path $env:CACHE )) { mkdir $env:CACHE; }
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://beta.quicklisp.org/quicklisp.lisp" -OutFile $env:CACHE\quicklisp.lisp
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://github.com/Clozure/ccl/releases/download/v1.11.5/ccl-1.11.5-windowsx86.zip" -OutFile $env:CACHE\ccl.zip
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://github.com/Clozure/ccl/archive/v1.11.6.zip" -OutFile $env:CACHE\ccl-1.11.6.zip
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://gitlab.common-lisp.net/asdf/asdf/-/archive/3.3.3.3/asdf-3.3.3.3.zip"  -OutFile $env:CACHE\asdf.zip
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://downloads.sourceforge.net/project/sbcl/sbcl/2.0.0/sbcl-2.0.0-x86-64-windows-binary.msi" -OutFile $env:CACHE\sbcl.msi
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://github.com/joaotavora/sly/archive/master.zip" -OutFile "$env:CACHE\sly.zip"
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://github.com/didierverna/declt/archive/master.zip" -OutFile "$env:CACHE\declt.zip"
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://github.com/McCLIM/McCLIM/archive/master.zip" -OutFile "$env:CACHE\mcclim.zip"
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://gitlab.com/pouar/illogical-pathnames/-/archive/pouar/illogical-pathnames-pouar.zip" -OutFile "$env:CACHE\illogical-pathnames.zip"
- ps: Invoke-WebRequest -UserAgent wget -Uri "https://downloads.sourceforge.net/project/dejavu/dejavu/2.37/dejavu-fonts-ttf-2.37.zip" -OutFile $env:CACHE\dejavu.zip
- cmd: 'C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --upgrade-also --packages texinfo-tex,texlive-collection-xetex,jq,make,m4,mingw64-x86_64-binutils,mingw64-x86_64-gcc-core,mingw64-x86_64-headers,mingw64-x86_64-pthreads,mingw64-x86_64-runtime'
- ps: Expand-Archive $env:CACHE\ccl.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\ccl-1.11.6.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\asdf.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\sly.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\declt.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\mcclim.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\dejavu.zip -DestinationPath $env:CACHE
- ps: Expand-Archive $env:CACHE\illogical-pathnames.zip -DestinationPath $env:CACHE
- ps: Copy-Item $env:CACHE\ccl\win64-headers\ -recurse -destination $env:CACHE\ccl-1.11.6\
- ps: Copy-Item $env:CACHE\ccl\wx86cl64.image -destination $env:CACHE\ccl-1.11.6\
- ps: Copy-Item $env:CACHE\dejavu-fonts-ttf-2.37\ttf\*.ttf  -destination C:\Windows\Fonts
- cmd:  refreshenv
- cmd: 'start /wait msiexec /i %CACHE%\sbcl.msi /quiet /qn /norestart /log sbcl-install.log'
- ps: Copy-Item $env:CACHE\asdf-3.3.3.3\ -recurse -destination $env:USERPROFILE\common-lisp\
- cmd: 'C:\cygwin64\bin\bash.exe -lc "/cygdrive/c/projects/yadfa/ci/build-ccl.sh /cygdrive/c/cache/ccl-1.11.6"'
- cmd: '"%CACHE%\ccl-1.11.6\wx86cl64.exe" -b -l "%CACHE%\quicklisp.lisp" -e "(quicklisp-quickstart:install)"  -e "(#__exit 0)"'
- ps: Copy-Item ci\ccl-init.lisp -Destination $env:USERPROFILE\ccl-init.lisp
- ps: New-Item -Path $env:USERPROFILE\quicklisp\local-projects\yadfa -ItemType SymbolicLink -Value $pwd
- ps: New-Item -Path $env:USERPROFILE\quicklisp\local-projects\sly -ItemType SymbolicLink -Value $env:CACHE\sly-master
- ps: New-Item -Path $env:USERPROFILE\quicklisp\local-projects\declt -ItemType SymbolicLink -Value $env:CACHE\declt-master
- ps: New-Item -Path $env:USERPROFILE\quicklisp\local-projects\McCLIM -ItemType SymbolicLink -Value $env:CACHE\McCLIM-master
- ps: New-Item -Path $env:USERPROFILE\quicklisp\local-projects\illogical-pathnames -ItemType SymbolicLink -Value $env:CACHE\illogical-pathnames-pouar

build_script:
- cmd: '"C:\Program Files\Steel Bank Common Lisp\2.0.0\sbcl" --script "appveyor-build-docs.lisp" texi'
- cmd: 'C:\cygwin64\bin\bash.exe -lc "cd /cygdrive/c/projects/yadfa/docs/reference;make -j4 all"'
- cmd: '"%CACHE%\ccl-1.11.6\wx86cl64.exe" -b -l appveyor-build.lisp -e "(#__exit 0)"'
- ps: cp chocolatey/yadfa.nuspec yadfa.nuspec # for some reason Chocolatey seems to expect the package build file to be in the same directory as the source directory
- ps: choco pack yadfa.nuspec --version $(Get-Date -UFormat "0.9.%s")
artifacts:
- path: yadfa*.nupkg
  name: NuPKG
test_script:
- ps: |
    If(!(test-path C:\projects\yadfa\yadfa.exe )) { echo "yadfa.exe was not built";exit 1; }
    Else { echo "yadfa.exe was built"; }
    If(!(test-path C:\projects\yadfa\docs\reference\yadfa-reference.html )) { echo "yadfa-reference.html was not built";exit 1; }
    Else { echo "yadfa-reference.html was built"; }
    If(!(test-path C:\projects\yadfa\docs\reference\yadfa-reference.pdf )) { echo "yadfa-reference.pdf was not built";exit 1; }
    Else { echo "yadfa-reference.pdf was built"; }
    If(!(test-path C:\projects\yadfa\docs\reference\yadfa-reference.info )) { echo "yadfa-reference.info was not built";exit 1; }
    Else { echo "yadfa-reference.info was built"; }
    If(!(test-path C:\projects\yadfa\docs\reference\yadfa-reference.ps )) { echo "yadfa-reference.ps was not built";exit 1; }
    Else { echo "yadfa-reference.ps was built"; }
    If(!(test-path C:\projects\yadfa\docs\reference\yadfa-reference.dvi )) { echo "yadfa-reference.dvi was not built";exit 1; }
    Else { echo "yadfa-reference.dvi was built"; }
    If(!(test-path C:\projects\yadfa\docs\reference\yadfa-reference.xml )) { echo "yadfa-reference.xml was not built";exit 1; }
    Else { echo "yadfa-reference.xml was built"; }
    If(!(Get-ChildItem C:\projects\yadfa\yadfa*.nupkg )) { echo "nupkg was not built";exit 1; }
    Else { echo "nupkg was built"; }
deploy_script:
- ps: |
    if( $env:APPVEYOR_REPO_BRANCH -like "master") {
        nuget sources Add -Name Bintray -Source https://api.bintray.com/nuget/pouar/yadfa-chocolatey -UserName pouar -Password $env:bintrayapikey
        nuget setapikey 'pouar:'$env:bintrayapikey -Source Bintray
        nuget push $([string[]](Get-Item yadfa*.nupkg)) -Source https://api.bintray.com/nuget/pouar/yadfa-chocolatey
    }
- cmd: 'C:\cygwin64\bin\bash.exe -lc "export bintrayapikey APPVEYOR_REPO_BRANCH;/cygdrive/c/projects/yadfa/ci/clear-old-versions.sh"'
